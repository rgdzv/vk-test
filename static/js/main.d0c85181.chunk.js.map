{"version":3,"sources":["images/plus.svg","components/card/card.jsx","containers/card/card-container.jsx","redux/actions/actions.js","redux/action-types/action-types.js","components/add-form/add-form.jsx","containers/add-form/add-form-container.jsx","components/column/column.jsx","containers/columns/columns.jsx","App.js","redux/helper/helper.js","redux/reducers/columns.js","redux/store/store.js","index.js","images/close.svg"],"names":["module","exports","Card","children","handleRemoveCard","cardIndex","columnIndex","draggableId","index","provided","snapshot","className","ref","innerRef","draggableProps","dragHandleProps","style","isDragging","draggableStyle","background","src","close","alt","onClick","CardContainer","card","dispatch","type","removeCard","AddForm","value","setValue","showForm","setShowForm","textareaRef","handleAddCard","isEmptyColumn","rows","onChange","e","target","placeholder","plus","AddFormContainer","useState","useRef","useEffect","current","focus","addColumn","addCard","Column","title","cards","remove","removeColumn","droppableId","droppableProps","map","key","Columns","items","useSelector","columns","useDispatch","onDragEnd","result","source","destination","item","App","state","sourceCardIndex","sourceId","destinationCardIndex","destinationId","sourceColumnIndex","parseInt","replace","destinationColumnIndex","currentColumnIndex","splice","sourceCard","destinationCards","Array","from","initialState","reducers","combineReducers","action","filter","el","reorderCards","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,kRCuC5BC,EA1BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,iBAAkBC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,YAA1C,MACU,qBAAdD,EACL,kBAAC,IAAD,CACEE,YAAW,eAAUD,EAAV,YAAyBD,GACpCG,MAAOH,IAEN,SAACI,EAAUC,GAAX,OACC,uCACEC,UAAU,OACVC,IAAKH,EAASI,UACVJ,EAASK,eACTL,EAASM,gBAJf,CAKEC,OApBiBC,EAqBfP,EAASO,WArBkBC,EAsB3BT,EAASK,eAAeE,MAtBV,aAExBG,WAAYF,EAAa,cAAgB,SAGtCC,MAoBK,8BAAOf,GACP,yBAAKiB,IAAKC,IAAOC,IAAI,QAAQC,QAASnB,KA1BtB,IAACa,EAAYC,KA+BnC,yBAAKP,UAAU,QAAQR,ICfZqB,EAjBO,SAAC,GAAgD,IAA9CnB,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YAAamB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAMrD,OACE,kBAAC,EAAD,CACErB,UAAWA,EACXD,iBAPqB,WACvBsB,ECEsB,SAACpB,EAAaD,GAAd,MAA6B,CACrDsB,KCTyB,cDUzBrB,cACAD,aDLWuB,CAAWtB,EAAaD,KAO/BC,YAAaA,GAEZmB,I,wBGmCQI,G,MA7CC,SAAC,GAQV,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OAAOJ,EACL,yBAAKrB,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,KACE,8BACE0B,KAAK,IACLP,MAAOA,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOV,QACnClB,IAAKsB,EACLO,YACEL,EACI,yIACA,kJAIV,yBAAKzB,UAAU,0BACb,4BAAQY,QAASY,GACdC,EAAgB,8FAAqB,qGAExC,yBAAKhB,IAAKC,IAAOC,IAAI,QAAQC,QAAS,kBAAMU,GAAY,SAK9D,yBAAKtB,UAAU,oBAAoBY,QAAS,kBAAMU,GAAY,KAC5D,yBAAKb,IAAKsB,IAAMpB,IAAI,SACpB,8BACGc,EACG,0IACA,oJCNGO,EAnCU,SAAC,GAA8C,IAA5CrC,EAA2C,EAA3CA,YAAa8B,EAA8B,EAA9BA,cAAeV,EAAe,EAAfA,SAAe,EAErCkB,oBAAS,GAF4B,mBAE9DZ,EAF8D,KAEpDC,EAFoD,OAG3CW,mBAAS,IAHkC,mBAG9Dd,EAH8D,KAGvDC,EAHuD,KAI/DG,EAAcW,iBAAO,MAE3BC,qBAAU,WACJZ,EAAYa,SACdb,EAAYa,QAAQC,UAErB,CAAChB,IAYJ,OACE,kBAAC,EAAD,CACEA,SAAUA,EACVC,YAAaA,EACbH,MAAOA,EACPC,SAAUA,EACVG,YAAaA,EACbC,cAjBkB,WAElBT,EADEU,EHFiB,SAACN,GAAD,MAAY,CACnCH,KCdwB,aDexBG,SGCamB,CAAUnB,GHfF,SAACxB,EAAawB,GAAd,MAAyB,CAC9CH,KCJsB,WDKtBrB,cACAwB,SGcaoB,CAAQ5C,EAAawB,IAEhCC,EAAS,IACTE,GAAY,IAWVG,cAAeA,KCkCNe,EA5DA,SAAC,GAKT,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACA/C,EAEI,EAFJA,YACAoB,EACI,EADJA,SAEM4B,EAAS,WACb5B,EJKwB,SAACpB,GAAD,MAAkB,CAC5CqB,KClB2B,gBDmB3BrB,eIPWiD,CAAajD,KAExB,OAAO+C,EACL,kBAAC,IAAD,CAAWG,YAAW,iBAAYlD,KAC/B,SAAAG,GAAQ,OACP,uCACEE,UAAU,mBACNF,EAASgD,eAFf,CAGE7C,IAAKH,EAASI,WAEd,yBAAKF,UAAU,UACb,yBAAKA,UAAU,kBACZyC,GACC,oCACE,2BAAIA,GACJ,yBAAKhC,IAAKC,IAAOC,IAAI,QAAQC,QAAS+B,MAI5C,yBAAK3C,UAAU,iBACZ0C,EAAMK,KAAI,SAACjC,EAAMjB,GAAP,OACT,kBAAC,EAAD,CACEmD,IAAKnD,EACLH,UAAWG,EACXF,YAAaA,EACbmB,KAAMA,EACNC,SAAUA,OAGbjB,EAASgC,aAEZ,kBAAC,EAAD,CACEnC,YAAaA,EACb8B,eAAe,EACfV,SAAUA,SAOpB,yBAAKf,UAAU,mBACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEL,YAAaA,EACb8B,eAAe,EACfV,SAAUA,O,OCrBLkC,EAlCC,WAEd,IAAMC,EAAQC,aAAY,qBAAGC,WACvBrC,EAAWsC,cAcjB,OACE,oCACE,kBAAC,IAAD,CAAiBC,UAdH,SAACC,GAAY,ILcJ,EKbjBC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,aAEbA,GACAD,EAAOX,cAAgBY,EAAYZ,aAClCW,EAAO3D,QAAU4D,EAAY5D,OAIjCkB,ELKsD,CACxDC,KCtB2B,gBDuB3BwC,QAF2B,EKLH,CAAEA,SAAQC,gBLKLD,OAG7BC,YAH0B,EAAWA,gBKC9BP,EAAMH,KAAI,SAACW,EAAM7D,GAAP,OACT,kBAAC,EAAD,eACEmD,IAAKnD,GACD6D,EAFN,CAGE/D,YAAaE,EACbkB,SAAUA,SAIhB,kBAAC,EAAD,CAAQA,SAAUA,MCvBT4C,EARH,WACV,OACE,oCACE,kBAAC,EAAD,Q,uBCNS,cAAqC,IAAlCC,EAAiC,EAAjCA,MAAOJ,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAChBI,EAA2CL,EAAlD3D,MAAqCiE,EAAaN,EAA1BX,YACjBkB,EAAqDN,EAA5D5D,MAA0CmE,EAAkBP,EAA/BZ,YAC/BoB,EAAoBC,SAASJ,EAASK,QAAQ,UAAW,KACzDC,EAAyBF,SAASF,EAAcG,QAAQ,UAAW,KAEzE,OAAOP,EAAMb,KAAI,SAACW,EAAMW,GACtB,GAAID,IAA2BC,EAAoB,CAAC,IAAD,EAC5BT,EAAMK,GAAmBvB,MAAM4B,OAAOT,EAAgB,GAApEU,EAD0C,oBAE3CC,EAAmBC,MAAMC,KAAKd,EAAMQ,GAAwB1B,OAClE8B,EAAiBF,OAAOP,EAAsB,EAAGQ,GACjDb,EAAKhB,MAAQ8B,EAEf,OAAOd,MCXLiB,EAAe,CACnB,CACElC,MAAO,uEACPC,MAAO,CACL,mFACA,yIACA,oIAGJ,CACED,MAAO,iEACPC,MAAO,CAAC,2HCVNkC,EAAWC,YAAgB,CAC/BzB,QDaqB,WAAmC,IAAlCQ,EAAiC,uDAAzBe,EAAcG,EAAW,uCACvD,OAAQA,EAAO9D,MACb,IPpBoB,WOqBlB,OAAO4C,EAAMb,KAAI,SAACW,EAAM7D,GACtB,OAAIiF,EAAOnF,cAAgBE,EAClB,2BACF6D,GADL,IAEEhB,MAAM,GAAD,mBAAMgB,EAAKhB,OAAX,CAAkBoC,EAAO3D,UAG3BuC,KAEX,IP7BuB,cO8BrB,OAAOE,EAAMb,KAAI,SAACW,EAAM7D,GACtB,OAAIiF,EAAOnF,cAAgBE,EAClB,2BACF6D,GADL,IAEEhB,MAAOgB,EAAKhB,MAAMqC,QAAO,SAACC,EAAItF,GAAL,OAAmBoF,EAAOpF,YAAcA,OAG9DgE,KAEX,IPtCsB,aOuCpB,MAAM,GAAN,mBACKE,GADL,CAEE,CACEnB,MAAOqC,EAAO3D,MACduB,MAAO,MAGb,IP5CyB,gBO4CzB,IACUc,EAAwBsB,EAAxBtB,OAAQC,EAAgBqB,EAAhBrB,YAChB,OAAOwB,EAAa,CAClBrB,QACAJ,SACAC,gBAEJ,IPpDyB,gBOqDvB,OAAO,YAAIG,GAAOmB,QAAO,SAACC,EAAInF,GAAL,OAAeiF,EAAOnF,cAAgBE,KACjE,QACE,OAAO+D,MClDPsB,EAAmBC,OAAOC,sCAAwCC,IAQzDC,EANDC,YAAYX,EAAUM,EAClCM,YAAgBC,OCHlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJO,SAASC,eAAe,U,kBCd1BzG,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.d0c85181.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.aa922b9a.svg\";","import React from \"react\";\r\nimport \"./card.scss\";\r\nimport close from \"./../../images/close.svg\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst cardDraggingStyle = (isDragging, draggableStyle) => ({\r\n  // change background colour if dragging\r\n  background: isDragging ? \"DeepSkyBlue\" : \"white\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst Card = ({ children, handleRemoveCard, cardIndex, columnIndex }) => \r\n  typeof cardIndex !== \"undefined\" ? (\r\n    <Draggable\r\n      draggableId={`card-${columnIndex}-${cardIndex}`}\r\n      index={cardIndex}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <div \r\n          className=\"card\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={cardDraggingStyle(\r\n            snapshot.isDragging,\r\n            provided.draggableProps.style\r\n          )}\r\n        >\r\n          <span>{children}</span>\r\n          <img src={close} alt=\"close\" onClick={handleRemoveCard}/>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  ) : (\r\n    <div className=\"card\">{children}</div>\r\n  );\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { removeCard } from \"./../../redux/actions/actions\";\r\nimport Card from \"../../components/card/card\";\r\n\r\nconst CardContainer = ({ cardIndex, columnIndex, card, dispatch }) => {\r\n\r\n  const handleRemoveCard = () => {\r\n    dispatch(removeCard(columnIndex, cardIndex))\r\n  }\r\n  \r\n  return (\r\n    <Card \r\n      cardIndex={cardIndex}\r\n      handleRemoveCard={handleRemoveCard}\r\n      columnIndex={columnIndex}\r\n    >\r\n      {card}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardContainer","import { ADD_CARD, REMOVE_CARD, ADD_COLUMN, REMOVE_COLUMN, REORDER_CARDS } from \"../action-types/action-types\";\r\n\r\n\r\nexport const addCard = (columnIndex, value) => ({\r\n  type: ADD_CARD,\r\n  columnIndex,\r\n  value\r\n});\r\n\r\nexport const removeCard = (columnIndex, cardIndex) => ({\r\n  type: REMOVE_CARD,\r\n  columnIndex,\r\n  cardIndex\r\n});\r\n\r\nexport const addColumn = (value) => ({\r\n  type: ADD_COLUMN,\r\n  value\r\n});\r\n\r\nexport const removeColumn = (columnIndex) => ({\r\n  type: REMOVE_COLUMN,\r\n  columnIndex\r\n});\r\n\r\nexport const reorderCards = ({ source, destination }) => ({\r\n  type: REORDER_CARDS,\r\n  source, \r\n  destination\r\n});\r\n","export const ADD_CARD = \"ADD_CARD\";\r\nexport const REMOVE_CARD = \"REMOVE_CARD\";\r\nexport const ADD_COLUMN = \"ADD_COLUMN\";\r\nexport const REMOVE_COLUMN = \"REMOVE_COLUMN\";\r\nexport const REORDER_CARDS = \"REORDER_CARDS\";","import React from \"react\";\r\nimport plus from \"./../../images/plus.svg\";\r\nimport \"./add-form.scss\";\r\nimport Card from \"./../card/card\";\r\nimport close from \"./../../images/close.svg\";\r\n\r\nconst AddForm = ({\r\n  value,\r\n  setValue,\r\n  showForm,\r\n  setShowForm,\r\n  textareaRef,\r\n  handleAddCard,\r\n  isEmptyColumn,\r\n}) => {\r\n  return showForm ? (\r\n    <div className=\"add__form\">\r\n      <div className=\"add__form__opened\">\r\n        <Card>\r\n          <textarea\r\n            rows=\"3\"\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            ref={textareaRef}\r\n            placeholder={\r\n              isEmptyColumn\r\n                ? \"Введите название колонки\"\r\n                : \"Введите название карточки\"\r\n            }\r\n          />\r\n        </Card>\r\n        <div className=\"add__form__opened__btn\">\r\n          <button onClick={handleAddCard}>\r\n            {isEmptyColumn ? \"Добавить колонку\" : \"Добавить карточку\"}\r\n          </button>\r\n          <img src={close} alt=\"close\" onClick={() => setShowForm(false)} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"add__form__closed\" onClick={() => setShowForm(true)}>\r\n      <img src={plus} alt=\"plus\" />\r\n      <span>\r\n        {isEmptyColumn\r\n          ? \"Добавить еще одну колонку\"\r\n          : \"Добавить еще одну карточку\"}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport AddForm from '../../components/add-form/add-form';\r\nimport { addCard, addColumn } from './../../redux/actions/actions'\r\n\r\nconst AddFormContainer = ({ columnIndex, isEmptyColumn, dispatch }) => {\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const textareaRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (textareaRef.current) {\r\n      textareaRef.current.focus();\r\n    }\r\n  }, [showForm]);\r\n\r\n  const handleAddCard = () => {\r\n    if (isEmptyColumn) {\r\n      dispatch(addColumn(value))\r\n    } else {\r\n      dispatch(addCard(columnIndex, value))\r\n    }\r\n    setValue(\"\");\r\n    setShowForm(false);\r\n  }\r\n  \r\n  return (\r\n    <AddForm\r\n      showForm={showForm}\r\n      setShowForm={setShowForm} \r\n      value={value}\r\n      setValue={setValue}\r\n      textareaRef={textareaRef}\r\n      handleAddCard={handleAddCard}\r\n      isEmptyColumn={isEmptyColumn}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AddFormContainer;\r\n","import React from \"react\";\r\nimport \"./column.scss\";\r\nimport close from \"./../../images/close.svg\";\r\nimport CardContainer from \"./../../containers/card/card-container\";\r\nimport AddFormContainer from \"../../containers/add-form/add-form-container\";\r\nimport { removeColumn } from './../../redux/actions/actions';\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst Column = ({\r\n  title,\r\n  cards,\r\n  columnIndex,\r\n  dispatch\r\n}) => {\r\n  const remove = () => {\r\n    dispatch(removeColumn(columnIndex))\r\n  };\r\n  return cards ? (\r\n    <Droppable droppableId={`column-${columnIndex}`}>\r\n      {provided => (\r\n        <div \r\n          className=\"column__wrapper\" \r\n          {...provided.droppableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div className=\"column\">\r\n            <div className=\"column__header\">\r\n              {title && (\r\n                <>\r\n                  <p>{title}</p>\r\n                  <img src={close} alt=\"close\" onClick={remove} />\r\n                </>\r\n              )}\r\n            </div>\r\n            <div className=\"column__items\">\r\n              {cards.map((card, index) => (\r\n                <CardContainer\r\n                  key={index}\r\n                  cardIndex={index}\r\n                  columnIndex={columnIndex}\r\n                  card={card}\r\n                  dispatch={dispatch}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n            <AddFormContainer\r\n              columnIndex={columnIndex}\r\n              isEmptyColumn={false}\r\n              dispatch={dispatch}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  ) : (\r\n    <div className=\"column__wrapper\">\r\n      <div className=\"column\">\r\n        <AddFormContainer\r\n          columnIndex={columnIndex}\r\n          isEmptyColumn={true}\r\n          dispatch={dispatch}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import React from \"react\";\r\nimport Column from \"../../components/column/column\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reorderCards } from './../../redux/actions/actions'\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nconst Columns = () => {\r\n\r\n  const items = useSelector(({ columns }) => columns)\r\n  const dispatch = useDispatch();\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (\r\n      !destination ||\r\n      (source.droppableId === destination.droppableId &&\r\n        source.index === destination.index)\r\n    ) {\r\n      return;\r\n    }\r\n    dispatch(reorderCards({ source, destination }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        {items.map((item, index) => (\r\n          <Column\r\n            key={index}\r\n            {...item}\r\n            columnIndex={index}\r\n            dispatch={dispatch}\r\n          />\r\n        ))}\r\n      </DragDropContext>\r\n      <Column dispatch={dispatch}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Columns\r\n\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Columns from './containers/columns/columns';\n\nconst App = () => {\n  return (\n    <>\n      <Columns/>\n    </>\n  );\n};\n\nexport default App;\n","\r\nexport default ({ state, source, destination }) => {\r\n  const { index: sourceCardIndex, droppableId: sourceId } = source;\r\n  const { index: destinationCardIndex, droppableId: destinationId } = destination;\r\n  const sourceColumnIndex = parseInt(sourceId.replace(\"column-\", \"\"));\r\n  const destinationColumnIndex = parseInt(destinationId.replace(\"column-\", \"\"));\r\n\r\n  return state.map((item, currentColumnIndex) => {\r\n    if (destinationColumnIndex === currentColumnIndex) {\r\n      const [sourceCard] = state[sourceColumnIndex].cards.splice(sourceCardIndex,1);\r\n      const destinationCards = Array.from(state[destinationColumnIndex].cards);\r\n      destinationCards.splice(destinationCardIndex, 0, sourceCard);\r\n      item.cards = destinationCards;\r\n    }\r\n    return item;\r\n  });\r\n};","import { ADD_CARD, REMOVE_CARD, ADD_COLUMN, REMOVE_COLUMN, REORDER_CARDS } from \"../action-types/action-types\";\r\nimport reorderCards from './../helper/helper';\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"План на месяц\",\r\n    cards: [\r\n      \"Пройти курс по React\",\r\n      \"Сделать тестовое задание\",\r\n      \"Отремонтировать машину\",\r\n    ],\r\n  },\r\n  {\r\n    title: \"План на день\",\r\n    cards: [\"Записаться на курс по React\"],\r\n  },\r\n];\r\n\r\nexport const columns = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CARD:\r\n      return state.map((item, index) => {\r\n        if (action.columnIndex === index) {\r\n          return {\r\n            ...item,\r\n            cards: [...item.cards, action.value],\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    case REMOVE_CARD:\r\n      return state.map((item, index) => {\r\n        if (action.columnIndex === index) {\r\n          return {\r\n            ...item,\r\n            cards: item.cards.filter((el, cardIndex) => action.cardIndex !== cardIndex),\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    case ADD_COLUMN:\r\n      return [\r\n        ...state,\r\n        {\r\n          title: action.value,\r\n          cards: []\r\n        }\r\n      ]\r\n    case REORDER_CARDS:\r\n      const { source, destination } = action;\r\n      return reorderCards({\r\n        state,\r\n        source,\r\n        destination\r\n      });\r\n    case REMOVE_COLUMN:\r\n      return [...state].filter((el, index) => action.columnIndex !== index)\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { columns } from '../reducers/columns';\r\n\r\nconst reducers = combineReducers({\r\n  columns,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(\r\n  applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n//window.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/close.7e087dff.svg\";"],"sourceRoot":""}